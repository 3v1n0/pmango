Index: modules/tasks/tasks.class.php
===================================================================
--- modules/tasks/tasks.class.php	(revisione 90)
+++ modules/tasks/tasks.class.php	(copia locale)
@@ -1813,13 +1813,27 @@
 
 //This kludgy function echos children tasks as threads
 
-function showTaskPlanned( &$a, $level=0, $is_opened = true, $today_view = false, $notOpen = false, $canEdit, $showIncomplete = false, $roles, $taskview=true, $sdate, $edate) {//echo "^".$canEdit;
+function showTaskPlanned( &$a, $level=0, $is_opened = true, $today_view = false, $notOpen = false, $canEdit, $showIncomplete = false, $showMine = false, $roles, $taskview=true, $sdate, $edate) {//echo "^".$canEdit;
 	global $AppUI, $dPconfig, $done, $query_string, $userAlloc, $showEditCheckbox;
 	global $tasks_opened;
 	global $tasks_closed;
 	
 	if ($showIncomplete && intval(CTask::getPr($a["task_id"]) >= 100))
-		return '';
+		return '';
+
+	if ($showMine) {
+		$mine_found = false;
+
+		foreach ($a['task_assigned_users'] as $u) {
+			if ($u['user_id'] == $AppUI->user_id) {
+				$mine_found = true;
+				break;
+			}
+		}
+
+		if (!$mine_found)
+			return '';
+	}
 
 	$obj = new CTask();
 	$te = $obj->getEffort($a['task_id']);
@@ -2011,7 +2025,7 @@
 	echo $s;
 }
 
-function showTaskActual( &$a, $level=0, $is_opened = true, $today_view = false, $notOpen = false, $canEdit, $showIncomplete = false,$roles, $sdate, $edate) {
+function showTaskActual( &$a, $level=0, $is_opened = true, $today_view = false, $notOpen = false, $canEdit, $showIncomplete = false,$showMine = false,$roles, $sdate, $edate) {
 	global $AppUI, $dPconfig, $done, $query_string, $userAlloc, $showEditCheckbox;
 	
 	$obj = new CTask();//echo $re;
@@ -2019,7 +2033,21 @@
 	//inserrire controlla unfinished
 	$tpr = intval( $obj->getProgress($a['task_id'],$te));//$showIncomplete=false;
 	if ($showIncomplete && intval($tpr) >= 100)
-		return '';
+		return '';
+
+	if ($showMine) {
+		$mine_found = false;
+
+		foreach ($a['task_assigned_users'] as $u) {
+			if ($u['user_id'] == $AppUI->user_id) {
+				$mine_found = true;
+				break;
+			}
+		}
+
+		if (!$mine_found)
+			return '';
+	}
 		
 	$tc = $obj->getBudget($a['task_id']);
     $now = new CDate();
@@ -2243,7 +2271,7 @@
 	echo $s;
 }
 
-function findchild( &$tarr, $parent, $level=0, $tview, $explodeTasks = false, $canEdit, $showIncomplete = false, $roles, $start, $end, $min_view = false){
+function findchild( &$tarr, $parent, $level=0, $tview, $explodeTasks = false, $canEdit, $showIncomplete = false, $showMine = false, $roles, $start, $end, $min_view = false){
 	GLOBAL $projects;
 	global $tasks_opened;
 	global $tasks_closed;
@@ -2258,13 +2286,13 @@
 			else
 		    	$is_opened = in_array($tarr[$x]["task_id"], $tasks_opened);
 		    if ($tview)
-				showTaskActual( $tarr[$x], $level, $is_opened,'','',$canEdit, $showIncomplete, $roles, $start, $end);
+				showTaskActual( $tarr[$x], $level, $is_opened,'','',$canEdit, $showIncomplete, $showMine, $roles, $start, $end);
 			else{
-				if($min_view) showTaskPlanned( $tarr[$x], $level, $is_opened,'','',$canEdit, $showIncomplete, $roles, true, $start, $end);
-				else showTaskPlanned( $tarr[$x], $level, $is_opened,'','',$canEdit, $showIncomplete, $roles, false, $start, $end);
+				if($min_view) showTaskPlanned( $tarr[$x], $level, $is_opened,'','',$canEdit, $showIncomplete, $showMine, $roles, true, $start, $end);
+				else showTaskPlanned( $tarr[$x], $level, $is_opened,'','',$canEdit, $showIncomplete, $showMine, $roles, false, $start, $end);
 				}
 			if($is_opened) {// || !$tarr[$x]["task_dynamic"]){
-			    findchild( $tarr, $tarr[$x]["task_id"], $level, $tview, $explodeTasks,$canEdit, $showIncomplete, $roles, $start, $end);
+			    findchild( $tarr, $tarr[$x]["task_id"], $level, $tview, $explodeTasks,$canEdit, $showIncomplete, $showMine, $roles, $start, $end);
 			}
 		}
 	}
Index: modules/tasks/tasks.php
===================================================================
--- modules/tasks/tasks.php	(revisione 90)
+++ modules/tasks/tasks.php	(copia locale)
@@ -164,15 +164,18 @@
 $task_sort_type2 = dPgetParam( $_GET, 'task_sort_type2', '' );
 $child_task = dPgetParam( $_GET, 'child_task', '' );
 $task_sort_order1 = intval( dPgetParam( $_GET, 'task_sort_order1', 0 ) );
-$task_sort_order2 = intval( dPgetParam( $_GET, 'task_sort_order2', 0 ) );
+$task_sort_order2 = intval( dPgetParam( $_GET, 'task_sort_order2', 0 ) );
+
 if (isset($_POST['show_task_options'])) {
-	$AppUI->setState('TaskListShowIncomplete', dPgetParam($_POST, 'show_incomplete', 0));
+	$AppUI->setState('TaskListShowIncomplete', dPgetParam($_POST, 'show_incomplete', 0));
+	$AppUI->setState('TaskListShowMine', dPgetParam($_POST, 'show_mine', 0));
 	$AppUI->setState('ExplodeTasks', dPgetParam($_POST, 'explode_tasks', '1'));
 	$AppUI->setState('PersonsRoles', dPgetParam($_POST, 'roles', 'N'));
 	$AppUI->setState('StartDate', dPgetParam($_POST, 'show_sdate', $db_start_date[0]['project_start_date']));
 	$AppUI->setState('EndDate', dPgetParam($_POST, 'show_edate', $db_start_date[0]['project_finish_date']));
 }
-$showIncomplete = $AppUI->getState('TaskListShowIncomplete', 0);
+$showIncomplete = $AppUI->getState('TaskListShowIncomplete', 0);
+$showMine = $AppUI->getState('TaskListShowMine', 0);
 $explodeTasks = $AppUI->getState('ExplodeTasks', '1');
 $roles = $AppUI->getState('PersonsRoles', 'N');
 $StartDate = $AppUI->getState('StartDate', $db_start_date[0]['project_start_date']);
@@ -624,8 +627,14 @@
 				</td>
 				<td>
 					<?php echo $AppUI->_('Incomplete tasks only'); ?></td>
+				</td>
+				<td>
+					<input type='checkbox' name='show_mine' <?php echo $showMine ? 'checked="checked"' : '';?> />
 				</td>
 				<td>
+					<?php echo $AppUI->_('My tasks only'); ?></td>
+				</td>
+				<td>
 				<?php echo "&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;".$AppUI->_('Explode tasks').": ";?>
 				</td>
 				<td>
@@ -874,12 +883,12 @@
 				else
 			    	$is_opened = in_array($t["task_id"], $tasks_opened);
 			    if ($tview) 
-					showTaskActual( $t, 0, $is_opened,'','', $canEdit, $showIncomplete, $roles, $start_date->format( FMT_TIMESTAMP_DATE ), $end_date->format( FMT_TIMESTAMP_DATE ));
+					showTaskActual( $t, 0, $is_opened,'','', $canEdit, $showIncomplete, $showMine, $roles, $start_date->format( FMT_TIMESTAMP_DATE ), $end_date->format( FMT_TIMESTAMP_DATE ));
 				else{
-					if($min_view) showTaskPlanned( $t, 0, $is_opened,'','', $canEdit, $showIncomplete, $roles, true, $start_date->format( FMT_TIMESTAMP_DATE ), $end_date->format( FMT_TIMESTAMP_DATE ));
-					else showTaskPlanned( $t, 0, $is_opened,'','', $canEdit, $showIncomplete, $roles, false, $start_date->format( FMT_TIMESTAMP_DATE ), $end_date->format( FMT_TIMESTAMP_DATE ));}
+					if($min_view) showTaskPlanned( $t, 0, $is_opened,'','', $canEdit, $showIncomplete, $showMine, $roles, true, $start_date->format( FMT_TIMESTAMP_DATE ), $end_date->format( FMT_TIMESTAMP_DATE ));
+					else showTaskPlanned( $t, 0, $is_opened,'','', $canEdit, $showIncomplete, $showMine, $roles, false, $start_date->format( FMT_TIMESTAMP_DATE ), $end_date->format( FMT_TIMESTAMP_DATE ));}
 				if($is_opened){
-				    findchild( $p['tasks'], $t["task_id"],'', $tview, $explodeTasks, $canEdit, $showIncomplete, $roles, $start_date->format( FMT_TIMESTAMP_DATE ), $end_date->format( FMT_TIMESTAMP_DATE ), $min_view);
+				    findchild( $p['tasks'], $t["task_id"],'', $tview, $explodeTasks, $canEdit, $showIncomplete, $showMine, $roles, $start_date->format( FMT_TIMESTAMP_DATE ), $end_date->format( FMT_TIMESTAMP_DATE ), $min_view);
 				}
 			}
 		}
@@ -892,7 +901,7 @@
 			        closeOpenedTask($p['tasks'][$i]["task_id"]);
 			    }
 			    if(in_array($p['tasks'][$i]["task_parent"], $tasks_opened)){// Child tasks
-		    		showTaskPlanned( $p['tasks'][$i], 1, false,'',true,$canEdit,$showIncomplete,$roles, false, $start_date->format( FMT_TIMESTAMP_DATE ), $end_date->format( FMT_TIMESTAMP_DATE ));
+		    		showTaskPlanned( $p['tasks'][$i], 1, false,'',true,$canEdit,$showIncomplete,$showMine,$roles, false, $start_date->format( FMT_TIMESTAMP_DATE ), $end_date->format( FMT_TIMESTAMP_DATE ));
 			    }
 			}
 		}
